{"version":3,"sources":["components/pages/Holders/index.tsx","components/pages/Holders/Holders.tsx","hooks/useMetaMask.tsx","hooks/useWeb3.tsx","hooks/usePhunksV2Contract.tsx","hooks/usePhunkyContract.tsx","utils/index.ts","components/ui/Button/index.tsx","components/ui/Button/Button.tsx","components/ui/ConnectButton/index.tsx","components/ui/ConnectButton/ConnectButton.tsx","components/pages/Home/Home.tsx","components/pages/Home/index.tsx","components/ui/Header/index.tsx","components/ui/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Holders","toNumber","hex","Web3","utils","hexToNumberString","toHex","useMetaMask","useState","ethereum","setEthereum","onboarding","useRef","address","setAddress","chainId","setChainId","balance","setBalance","isInstalled","useMemo","isMetaMask","isConnected","isListeningToAccounts","isListeningToChain","connect","useCallback","a","request","method","_address","_chainId","current","startOnboarding","addChain","chain","params","switchChain","handleAccountsChanged","handleChainChanged","window","location","reload","useEffect","MetaMaskOnboarding","detectEthereumProvider","_ethereum","selectedAddress","_balance","on","removeListener","useWeb3","web3Ref","usePhunksV2Contract","web3","contractRef","eth","Contract","abi","usePhunkyContract","reverseString","str","split","reverse","join","formatToDecimals","numberString","decimals","reversedNumberString","length","padEnd","slice","Button","children","className","onClick","disabled","backgroundClass","classNames","ConnectButton","hideConnected","wallet","width","height","viewBox","fill","xmlns","d","Home","phunkyContract","phunksV2Contract","claimablePhunkies","setClaimablePhunkies","totalPhunky","setTotalPhunky","loadingEstimate","setLoadingEstimate","loadingClaim","setLoadingClaim","claimed","setClaimed","methods","balanceOf","call","balanceArray","Array","from","Promise","all","map","b","i","tokenOfOwnerByIndex","phunkTokens","token","claimable","claimableTokens","_claimablePhunkies","tokens","reduce","index","phunkId","claimPhunkies","claimablePhunks","filter","c","claim","href","target","rel","id","scope","claimablePhunky","toFixed","cx","cy","r","stroke","strokeWidth","strokeLinecap","strokeDasharray","x1","y1","x2","y2","gradientUnits","stopColor","offset","Header","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc51402e.chunk.js","sourcesContent":["import Holders from \"./Holders\";\n\nexport default Holders;\n","import React from \"react\";\n\ninterface HoldersProps {}\n\nconst Holders: React.FC<HoldersProps> = () => {\n  return <></>;\n};\n\nexport default Holders;\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport MetaMaskOnboarding from \"@metamask/onboarding\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport Web3 from \"web3\";\n\ntype Chain = {\n  chainId: number;\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string;\n    decimals: number;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n};\n// const CHAIN_NOT_ADDED_ERROR = 4902;\n\nconst toNumber = (hex: string) => +new Web3().utils.hexToNumberString(hex);\nconst toHex = new Web3().utils.toHex;\n\nfunction useMetaMask() {\n  const [ethereum, setEthereum] = useState<any>();\n  const onboarding = useRef<MetaMaskOnboarding>();\n\n  const [address, setAddress] = useState(\"\");\n  const [chainId, setChainId] = useState(0);\n  const [balance, setBalance] = useState(0);\n\n  const isInstalled = useMemo(\n    () => !!(ethereum && ethereum.isMetaMask),\n    [ethereum]\n  );\n  const isConnected = useMemo(\n    () => !!(isInstalled && address),\n    [isInstalled, address]\n  );\n\n  const isListeningToAccounts = useRef(false);\n  const isListeningToChain = useRef(false);\n\n  const connect = useCallback(async () => {\n    if (isInstalled) {\n      const [_address] = await ethereum?.request({\n        method: \"eth_requestAccounts\",\n      });\n      setAddress(_address);\n      const _chainId = await ethereum?.request({\n        method: \"eth_chainId\",\n      });\n      setChainId(toNumber(_chainId));\n    } else if (onboarding.current) onboarding.current.startOnboarding();\n  }, [isInstalled, ethereum]);\n\n  const addChain = useCallback(\n    async (chain: Chain) => {\n      if (isConnected) {\n        await ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{ ...chain, chainId: toHex(chain.chainId) }],\n        });\n      }\n    },\n    [isConnected, ethereum]\n  );\n\n  const switchChain = useCallback(\n    async (chainId) => {\n      if (isConnected) {\n        await ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: toHex(chainId) }],\n        });\n      }\n    },\n    [isConnected, ethereum]\n  );\n\n  const handleAccountsChanged = ([_address]: string[]) =>\n    setAddress(_address || \"\");\n\n  const handleChainChanged = () => window.location.reload();\n\n  useEffect(() => {\n    if (!onboarding.current) {\n      onboarding.current = new MetaMaskOnboarding();\n    }\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const _ethereum = (await detectEthereumProvider()) as any;\n      if (_ethereum && _ethereum.isMetaMask) {\n        setEthereum(_ethereum);\n        setAddress(_ethereum.selectedAddress || \"\");\n        setChainId(toNumber(_ethereum.chainId || \"\"));\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (isConnected) {\n      (async () => {\n        const _balance = await ethereum.request({\n          method: \"eth_getBalance\",\n          params: [address],\n        });\n        setBalance(toNumber(_balance));\n      })();\n    }\n  }, [address, ethereum, isConnected]);\n\n  useEffect(() => {\n    if (isInstalled && !isListeningToAccounts.current) {\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      isListeningToAccounts.current = true;\n    }\n\n    return () => {\n      if (isListeningToAccounts.current) {\n        ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n        isListeningToAccounts.current = false;\n      }\n    };\n  }, [ethereum, isInstalled]);\n\n  useEffect(() => {\n    if (isInstalled && !isListeningToChain.current) {\n      ethereum.on(\"chainChanged\", handleChainChanged);\n      isListeningToChain.current = true;\n    }\n\n    return () => {\n      if (isListeningToChain.current) {\n        ethereum.removeListener(\"chainChanged\", handleChainChanged);\n        isListeningToChain.current = false;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isInstalled]);\n\n  return {\n    address,\n    balance,\n    chainId,\n    isInstalled,\n    isConnected,\n    connect,\n    addChain,\n    switchChain,\n  };\n}\n\nexport default useMetaMask;\n","import { useEffect, useRef } from \"react\";\nimport Web3 from \"web3\";\n\nfunction useWeb3() {\n  const web3Ref = useRef<Web3>();\n\n  useEffect(() => {\n    if (!web3Ref.current) {\n      web3Ref.current = new Web3(window.ethereum as any);\n    }\n  }, []);\n\n  return web3Ref.current;\n}\n\nexport default useWeb3;\n","import { useEffect, useRef } from \"react\";\nimport { Contract } from \"web3-eth-contract\";\nimport { abi, address } from \"../data/contracts/cryptophunks-v2.json\";\nimport useWeb3 from \"./useWeb3\";\n\nconst usePhunksV2Contract = () => {\n  const web3 = useWeb3();\n  const contractRef = useRef<Contract>();\n\n  useEffect(() => {\n    if (!contractRef.current && web3) {\n      contractRef.current = new web3.eth.Contract(abi as any, address);\n    }\n  }, [web3]);\n\n  return contractRef.current;\n};\n\nexport default usePhunksV2Contract;\n","import { useEffect, useRef } from \"react\";\nimport { Contract } from \"web3-eth-contract\";\nimport { abi, address } from \"../data/contracts/phunky.json\";\nimport useWeb3 from \"./useWeb3\";\n\nconst usePhunkyContract = () => {\n  const web3 = useWeb3();\n  const contractRef = useRef<Contract>();\n\n  useEffect(() => {\n    if (!contractRef.current && web3) {\n      contractRef.current = new web3.eth.Contract(abi as any, address);\n    }\n  }, [web3]);\n\n  return contractRef.current;\n};\n\nexport default usePhunkyContract;\n","const reverseString = (str: string) => str.split(\"\").reverse().join(\"\");\n\nconst formatToDecimals = (numberString: string, decimals: number) => {\n  let reversedNumberString = reverseString(numberString);\n  if (reversedNumberString.length < decimals + 1) {\n    reversedNumberString = reversedNumberString.padEnd(decimals + 1, \"0\");\n  }\n  reversedNumberString =\n    reversedNumberString.slice(0, decimals) +\n    \".\" +\n    reversedNumberString.slice(decimals);\n  return reverseString(reversedNumberString);\n};\n\nexport { formatToDecimals };\n","import Button from \"./Button\";\n\nexport default Button;\n","import React from \"react\";\n\ninterface ButtonProps {\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  className = \"\",\n  onClick,\n  disabled,\n}) => {\n  const backgroundClass = disabled ? \"bg-slate-600\" : \"bg-shifter\";\n  const classNames =\n    \"relative w-content h-12 overflow-visible pt-2 \" + className;\n\n  return (\n    <div className={classNames}>\n      <button\n        className={`${backgroundClass} px-6 py-3 text-white font-semibold flex items-center relative z-10 -top-4 -left-2 active:-top-2 active:-left-1 flex items-center`}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </button>\n      <div className={`${backgroundClass} absolute inset-0 p-1`}>\n        <div className=\"bg-p-black w-full h-full\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Button;\n","import ConnectButton from \"./ConnectButton\";\n\nexport default ConnectButton;\n","import React from \"react\";\nimport useMetaMask from \"../../../hooks/useMetaMask\";\nimport Button from \"../Button\";\n\ninterface ConnectButtonProps {\n  hideConnected?: boolean;\n}\n\nconst ConnectButton: React.FC<ConnectButtonProps> = ({ hideConnected }) => {\n  const wallet = useMetaMask();\n\n  return wallet.isConnected ? (\n    hideConnected ? (\n      <></>\n    ) : (\n      <div className=\"flex items-center bg-shifter p-4 mb-2\">\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M21.3 10.08C21.019 9.74263 20.6674 9.47107 20.27 9.28445C19.8726 9.09784 19.439 9.00073 19 8.99998H14.44L15 7.56998C15.2329 6.94387 15.3105 6.27059 15.2261 5.6079C15.1416 4.94522 14.8977 4.31291 14.5152 3.76521C14.1327 3.21752 13.623 2.77078 13.0299 2.46333C12.4369 2.15587 11.778 1.99688 11.11 1.99998C10.9176 2.00038 10.7295 2.05626 10.5681 2.16091C10.4067 2.26555 10.2789 2.41453 10.2 2.58998L7.35 8.99998H5C4.20435 8.99998 3.44129 9.31605 2.87868 9.87866C2.31607 10.4413 2 11.2043 2 12V19C2 19.7956 2.31607 20.5587 2.87868 21.1213C3.44129 21.6839 4.20435 22 5 22H17.73C18.4318 21.9997 19.1113 21.7535 19.6503 21.304C20.1893 20.8545 20.5537 20.2303 20.68 19.54L21.95 12.54C22.0286 12.1074 22.011 11.6628 21.8987 11.2377C21.7864 10.8126 21.582 10.4173 21.3 10.08ZM7 20H5C4.73478 20 4.48043 19.8946 4.29289 19.7071C4.10536 19.5196 4 19.2652 4 19V12C4 11.7348 4.10536 11.4804 4.29289 11.2929C4.48043 11.1053 4.73478 11 5 11H7V20ZM20 12.18L18.73 19.18C18.6874 19.4129 18.5635 19.6232 18.3804 19.7734C18.1973 19.9235 17.9668 20.0038 17.73 20H9V10.21L11.72 4.08998C12 4.17161 12.26 4.31039 12.4837 4.49757C12.7073 4.68474 12.8897 4.91625 13.0194 5.17748C13.1491 5.4387 13.2232 5.72397 13.2371 6.01528C13.2509 6.30659 13.2043 6.59762 13.1 6.86998L12.57 8.29998C12.4571 8.60224 12.4189 8.92733 12.4589 9.24751C12.4988 9.5677 12.6156 9.87347 12.7993 10.1387C12.983 10.404 13.2282 10.6208 13.5139 10.7708C13.7996 10.9208 14.1173 10.9994 14.44 11H19C19.1469 10.9997 19.2921 11.0319 19.4252 11.0941C19.5582 11.1563 19.676 11.2471 19.77 11.36C19.8663 11.4713 19.9369 11.6025 19.9767 11.7443C20.0164 11.886 20.0244 12.0348 20 12.18Z\"\n            fill=\"white\"\n          />\n        </svg>\n\n        <span className=\"font-semibold ml-4\">Wallet Connected</span>\n      </div>\n    )\n  ) : (\n    <Button onClick={wallet.connect}>Connect Wallet</Button>\n  );\n};\n\nexport default ConnectButton;\n","import React, { useEffect, useState } from \"react\";\nimport useMetaMask from \"../../../hooks/useMetaMask\";\nimport usePhunksV2Contract from \"../../../hooks/usePhunksV2Contract\";\nimport usePhunkyContract from \"../../../hooks/usePhunkyContract\";\nimport { formatToDecimals } from \"../../../utils\";\nimport Button from \"../../ui/Button\";\nimport ConnectButton from \"../../ui/ConnectButton\";\n\ninterface HomeProps {}\n\nconst Home: React.FC<HomeProps> = () => {\n  const wallet = useMetaMask();\n  const phunkyContract = usePhunkyContract();\n  const phunksV2Contract = usePhunksV2Contract();\n\n  const [claimablePhunkies, setClaimablePhunkies] = useState<\n    Array<{ phunkId: string; claimablePhunkies: number }>\n  >([]);\n  const [totalPhunky, setTotalPhunky] = useState<number>(0);\n  const [loadingEstimate, setLoadingEstimate] = useState<boolean>(true);\n  const [loadingClaim, setLoadingClaim] = useState<boolean>(false);\n  const [claimed, setClaimed] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (wallet.isConnected && phunksV2Contract && phunkyContract) {\n      (async () => {\n        setLoadingEstimate(true);\n        const balance = await phunksV2Contract.methods\n          .balanceOf(wallet.address)\n          .call();\n        const balanceArray: any[] = Array.from({ length: balance });\n        const phunkTokens = await Promise.all(\n          balanceArray.map((b: number, i: number) =>\n            phunksV2Contract.methods\n              .tokenOfOwnerByIndex(wallet.address, i)\n              .call()\n          )\n        );\n        const decimals = await phunkyContract.methods.decimals().call();\n        const claimableTokens: string[] = await Promise.all(\n          phunkTokens.map((token) =>\n            phunkyContract.methods.claimable(token).call()\n          )\n        );\n        const _claimablePhunkies: number[] = claimableTokens.map(\n          (tokens) => +formatToDecimals(tokens, decimals)\n        );\n        setTotalPhunky(_claimablePhunkies.reduce((a, b) => a + b));\n        setClaimablePhunkies(\n          phunkTokens.map((token, index) => {\n            return {\n              phunkId: token,\n              claimablePhunkies: _claimablePhunkies[index],\n            };\n          })\n        );\n        setLoadingEstimate(false);\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wallet.isConnected]);\n\n  const claimPhunkies = async () => {\n    if (phunkyContract) {\n      setLoadingClaim(true);\n      const claimablePhunks = claimablePhunkies\n        .filter((c) => c.claimablePhunkies > 0)\n        .map((c) => c.phunkId);\n      await Promise.all(\n        claimablePhunks.map((token) =>\n          phunkyContract.methods.claim(token).call()\n        )\n      );\n      setLoadingClaim(false);\n      setClaimed(true);\n    }\n  };\n\n  return (\n    <main className=\"flex flex-col items-center px-4\">\n      <section className=\"flex flex-col items-center\">\n        <h1>Introducing $PHUNKY</h1>\n        <p className=\"mt-8 max-w-lg w-full text-center\">\n          Governance Token for decentralization battles against centralizing\n          forces in the web3 world.\n        </p>\n        <div className=\"relative w-content h-12 overflow-visible pt-2 mt-10\">\n          <a\n            className=\"block bg-shifter px-6 py-3 text-white font-semibold flex items-center relative z-10 -top-4 -left-2 active:-top-2 active:-left-1 flex items-center\"\n            href=\"#claim\"\n          >\n            Initiate Claim\n          </a>\n          <div className=\"bg-shifter absolute inset-0 p-1\">\n            <div className=\"bg-p-black w-full h-full\"></div>\n          </div>\n        </div>\n        <div className=\"flex items-center mt-8\">\n          <a\n            className=\"mr-6\"\n            href=\"https://www.twitter.com\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <svg\n              width=\"32\"\n              height=\"32\"\n              viewBox=\"0 0 32 32\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M29.3333 7.73333C28.3311 8.16813 27.2712 8.45555 26.1867 8.58667C27.3309 7.9031 28.1884 6.82771 28.6 5.56C27.5247 6.20009 26.3477 6.65106 25.12 6.89333C24.2994 6.00343 23.2066 5.41106 22.0131 5.20914C20.8195 5.00721 19.5927 5.20715 18.5251 5.77759C17.4574 6.34803 16.6092 7.25671 16.1137 8.36112C15.6181 9.46552 15.5031 10.7032 15.7867 11.88C13.6126 11.77 11.4859 11.2039 9.54487 10.2185C7.60383 9.23303 5.8918 7.85026 4.52 6.16C4.03885 7.00023 3.78603 7.95176 3.78667 8.92C3.78496 9.81918 4.00562 10.7048 4.42901 11.4981C4.85239 12.2914 5.46536 12.9676 6.21333 13.4667C5.34397 13.443 4.49318 13.2097 3.73333 12.7867V12.8533C3.73985 14.1132 4.18133 15.3321 4.98309 16.304C5.78485 17.2758 6.89768 17.9409 8.13333 18.1867C7.65768 18.3314 7.16383 18.4077 6.66667 18.4133C6.32252 18.4093 5.97923 18.3781 5.64 18.32C5.99188 19.4038 6.67283 20.3509 7.5881 21.0295C8.50337 21.7082 9.60744 22.0847 10.7467 22.1067C8.82294 23.6204 6.44785 24.4465 4 24.4533C3.55431 24.4548 3.10898 24.4281 2.66667 24.3733C5.16591 25.987 8.07842 26.8436 11.0533 26.84C13.1063 26.8613 15.1428 26.4734 17.0442 25.6988C18.9455 24.9242 20.6734 23.7785 22.1269 22.3287C23.5805 20.8788 24.7306 19.1539 25.5101 17.2545C26.2895 15.3552 26.6827 13.3196 26.6667 11.2667C26.6667 11.04 26.6667 10.8 26.6667 10.56C27.7129 9.77975 28.6153 8.82323 29.3333 7.73333V7.73333Z\"\n                fill=\"#62BDFF\"\n              />\n            </svg>\n          </a>\n          <a\n            className=\"mr-6\"\n            href=\"https://www.discord.com\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <svg\n              width=\"32\"\n              height=\"32\"\n              viewBox=\"0 0 32 32\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M13.5177 14.1731H13.5176C13.1453 14.1731 12.7882 14.321 12.525 14.5843C12.2617 14.8476 12.1138 15.2047 12.1138 15.577C12.1138 15.9493 12.2617 16.3063 12.525 16.5696C12.7883 16.8329 13.1453 16.9808 13.5177 16.9808C13.89 16.9808 14.247 16.8329 14.5103 16.5696C14.7736 16.3063 14.9215 15.9493 14.9215 15.577C14.9215 15.2047 14.7736 14.8476 14.5104 14.5843C14.2471 14.321 13.8901 14.1731 13.5177 14.1731ZM18.5234 14.1731C18.2169 14.1471 17.9096 14.2143 17.6419 14.3659C17.3741 14.5174 17.1584 14.7463 17.0228 15.0225C16.8873 15.2987 16.8384 15.6094 16.8824 15.9139C16.9264 16.2184 17.0613 16.5026 17.2695 16.7291C17.4777 16.9557 17.7494 17.1141 18.0491 17.1836C18.3488 17.2532 18.6625 17.2306 18.9492 17.1189C19.2359 17.0072 19.4821 16.8115 19.6557 16.5575C19.8293 16.3035 19.9222 16.003 19.9222 15.6953C19.9304 15.5035 19.9007 15.3119 19.8348 15.1316C19.769 14.9513 19.6682 14.7857 19.5383 14.6443C19.4084 14.503 19.2519 14.3886 19.0778 14.3077C18.9036 14.2269 18.7153 14.1811 18.5234 14.1731ZM25.1885 2.66683H6.81152C6.4414 2.6677 6.07508 2.74147 5.73348 2.88393C5.39188 3.02638 5.08168 3.23473 4.8206 3.49708C4.55952 3.75942 4.35268 4.07063 4.21188 4.41292C4.07108 4.75521 3.99908 5.12188 4 5.492V24.0337C3.9991 24.4038 4.07111 24.7705 4.21191 25.1127C4.35272 25.455 4.55956 25.7662 4.82064 26.0286C5.08171 26.2909 5.39191 26.4992 5.7335 26.6417C6.0751 26.7841 6.44141 26.8579 6.81152 26.8588H22.3634L21.6366 24.3216L23.3919 25.9536L25.0514 27.4896L28 30.0954V5.492C28.0009 5.12188 27.9289 4.75521 27.7881 4.41292C27.6473 4.07063 27.4405 3.75942 27.1794 3.49708C26.9183 3.23473 26.6081 3.02638 26.2665 2.88393C25.9249 2.74147 25.5586 2.6677 25.1885 2.66683ZM19.8949 20.5776V20.5777C19.8949 20.5777 19.401 19.988 18.9896 19.4668C19.9837 19.2327 20.863 18.6547 21.472 17.8348C20.9786 18.1633 20.4495 18.4347 19.8949 18.6439C19.2569 18.9162 18.5896 19.1141 17.9063 19.2336C16.7317 19.4499 15.5272 19.4452 14.3543 19.22C13.6657 19.0852 12.9909 18.8878 12.3382 18.6303C11.9942 18.498 11.6597 18.3422 11.3371 18.164C11.2959 18.1365 11.2549 18.1228 11.2137 18.0954C11.1931 18.0851 11.1745 18.0712 11.1589 18.0543C10.9121 17.9172 10.7747 17.8211 10.7747 17.8211C11.3617 18.6237 12.2106 19.1961 13.1748 19.4394C12.7635 19.9606 12.256 20.5776 12.256 20.5776C11.4414 20.5996 10.6338 20.4209 9.90444 20.0574C9.17506 19.6939 8.54621 19.1567 8.07324 18.4931C8.11777 15.7128 8.793 12.9789 10.048 10.4976C11.1525 9.63021 12.499 9.12705 13.9017 9.05764L14.0387 9.22228C12.7191 9.54881 11.4876 10.1622 10.432 11.0188C10.432 11.0188 10.7338 10.8543 11.2411 10.6211C12.2269 10.1711 13.2777 9.8795 14.3544 9.75716C14.4312 9.74118 14.5093 9.73198 14.5877 9.72965C15.5066 9.60994 16.4367 9.60076 17.3578 9.70231C18.8065 9.86772 20.2089 10.3149 21.4858 11.0188C20.4837 10.2031 19.3198 9.60942 18.0712 9.27709L18.2631 9.05777C19.6658 9.12713 21.0123 9.63029 22.1167 10.4978C23.3719 12.979 24.0471 15.7129 24.0917 18.4931C23.6149 19.1562 22.9833 19.6927 22.2518 20.056C21.5204 20.4192 20.7113 20.5983 19.8949 20.5776Z\"\n                fill=\"#6563FF\"\n              />\n            </svg>\n          </a>\n        </div>\n      </section>\n      <section className=\"flex flex-col items-center pt-12 mt-36\" id=\"claim\">\n        <h2>Claim</h2>\n        <div className=\"grid grid-cols-1 lg:grid-cols-7 lg:gap-4\">\n          <article className=\"flex flex-col items-center mt-12 lg:col-span-2\">\n            <h3 className=\"mb-10\">Step 1: Connect Wallet</h3>\n            <ConnectButton />\n          </article>\n          <article className=\"flex flex-col items-center mt-12 lg:col-span-3\">\n            <h3>Step 2: Estimate Claim</h3>\n            {wallet.isConnected ? (\n              loadingEstimate ? (\n                <p className=\"mt-8 max-w-xl w-full text-center\">\n                  Fetching your Phunks ...\n                </p>\n              ) : claimablePhunkies.length > 0 ? (\n                <table className=\"min-w-full divide-y divide-gray-200 mt-8\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                        Phunk\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3 text-center\">\n                        Claimable $PHUNKY\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {claimablePhunkies.map((claimablePhunky) => (\n                      <tr key={claimablePhunky.phunkId}>\n                        <td className=\"px-6 py-3 text-center\">\n                          {claimablePhunky.phunkId}\n                        </td>\n                        <td className=\"px-6 py-3 text-center\">\n                          {claimablePhunky.claimablePhunkies.toFixed(4)}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <td className=\"px-6 py-3 text-center font-semibold\">\n                        Total\n                      </td>\n                      <td className=\"px-6 py-3 text-center font-semibold\">\n                        {totalPhunky.toFixed(4)} $PHUNKY\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"px-6 py-3 text-center font-semibold\">\n                        Total Claimable\n                      </td>\n                      <td className=\"px-6 py-3 text-center font-semibold\">\n                        {((totalPhunky * 90) / 100).toFixed(4)} $PHUNKY\n                      </td>\n                    </tr>\n                  </tfoot>\n                </table>\n              ) : (\n                <p className=\"mt-8 max-w-xl w-full text-center\">\n                  You need a Phunk. Buy from{\" \"}\n                  <a\n                    className=\"font-bold\"\n                    href=\"https://www.Notlarvalabs.com\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Notlarvalabs.com\n                  </a>{\" \"}\n                  or NFTX Vault for earning and redeeming earned{\" \"}\n                  <span className=\"text-shifter font-semibold\">$PHUNKY</span>.\n                </p>\n              )\n            ) : (\n              <p className=\"mt-8 max-w-xl w-full text-center\">\n                Connect your wallet and check for all the claimable Phunks.\n              </p>\n            )}\n          </article>\n          <article className=\"flex flex-col items-center mt-12 w-full lg:col-span-2\">\n            <h3>Step 3: Initiate Your Claim</h3>\n            {wallet.isConnected ? (\n              !loadingEstimate ? (\n                !totalPhunky ? (\n                  <p className=\"mt-8 max-w-xl w-full text-center\">\n                    You don't have enough $PHUNKY to claim\n                  </p>\n                ) : (\n                  <></>\n                )\n              ) : (\n                <></>\n              )\n            ) : (\n              <p className=\"mt-8 max-w-xl w-full text-center\">\n                Connect to your wallet to proceed.\n              </p>\n            )}\n            <div className=\"flex items-center mt-8 justify-center\">\n              {claimed ? (\n                <div className=\"flex items-center bg-shifter p-4 mb-2\">\n                  <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M21.41 8.65C21.41 8.65 21.41 8.65 21.41 8.59C20.7116 6.66395 19.4384 4.9989 17.7627 3.8201C16.087 2.64129 14.0897 2.00562 12.041 1.99907C9.99219 1.99253 7.99086 2.61542 6.30768 3.7835C4.6245 4.95157 3.34072 6.60845 2.63 8.53C2.59151 8.60556 2.56454 8.68646 2.55 8.77C2.18799 9.80851 2.00209 10.9002 2 12C1.99505 13.46 2.30987 14.9034 2.92234 16.2288C3.53481 17.5542 4.43007 18.7293 5.54523 19.6718C6.66039 20.6142 7.96838 21.301 9.37732 21.6839C10.7862 22.0668 12.2619 22.1365 13.7007 21.8882C15.1395 21.6399 16.5064 21.0795 17.7055 20.2465C18.9046 19.4135 19.9067 18.328 20.6414 17.0663C21.3762 15.8046 21.8257 14.3973 21.9585 12.9433C22.0913 11.4893 21.9041 10.0239 21.41 8.65V8.65ZM12 4C13.4029 4.00144 14.7808 4.37177 15.9953 5.07385C17.2099 5.77592 18.2185 6.78505 18.92 8H17.72C17.4226 7.67313 17.0567 7.416 16.6485 7.24696C16.2402 7.07793 15.7996 7.00118 15.3582 7.0222C14.9168 7.04322 14.4855 7.16149 14.0951 7.36855C13.7048 7.57561 13.365 7.86636 13.1 8.22C12.7493 8.08186 12.3768 8.00736 12 8C11.6232 8.00736 11.2507 8.08186 10.9 8.22C10.635 7.86636 10.2952 7.57561 9.90486 7.36855C9.51448 7.16149 9.08319 7.04322 8.6418 7.0222C8.20041 7.00118 7.75983 7.07793 7.35154 7.24696C6.94326 7.416 6.57736 7.67313 6.28 8H5.08C5.78145 6.78505 6.79006 5.77592 8.00465 5.07385C9.21924 4.37177 10.5971 4.00144 12 4V4ZM16.5 10C16.5 10.1978 16.4413 10.3911 16.3315 10.5556C16.2216 10.72 16.0654 10.8482 15.8827 10.9239C15.7 10.9996 15.4989 11.0194 15.3049 10.9808C15.1109 10.9422 14.9327 10.847 14.7929 10.7071C14.653 10.5673 14.5578 10.3891 14.5192 10.1951C14.4806 10.0011 14.5004 9.80004 14.5761 9.61732C14.6518 9.43459 14.78 9.27841 14.9444 9.16853C15.1089 9.05865 15.3022 9 15.5 9C15.7652 9 16.0196 9.10536 16.2071 9.29289C16.3946 9.48043 16.5 9.73478 16.5 10ZM9.5 10C9.5 10.1978 9.44135 10.3911 9.33147 10.5556C9.22158 10.72 9.06541 10.8482 8.88268 10.9239C8.69995 10.9996 8.49889 11.0194 8.30491 10.9808C8.11093 10.9422 7.93274 10.847 7.79289 10.7071C7.65304 10.5673 7.5578 10.3891 7.51921 10.1951C7.48063 10.0011 7.50043 9.80004 7.57612 9.61732C7.6518 9.43459 7.77998 9.27841 7.94443 9.16853C8.10888 9.05865 8.30222 9 8.5 9C8.76521 9 9.01957 9.10536 9.2071 9.29289C9.39464 9.48043 9.5 9.73478 9.5 10ZM12 20C9.87826 20 7.84343 19.1571 6.34314 17.6569C4.84285 16.1566 4 14.1217 4 12C4.00444 11.3252 4.09176 10.6535 4.26 10H5.5C5.47613 10.7956 5.76931 11.5682 6.31504 12.1477C6.86077 12.7272 7.61435 13.0661 8.41 13.09C9.20565 13.1139 9.97819 12.8207 10.5577 12.275C11.1372 11.7292 11.4761 10.9756 11.5 10.18C11.652 10.0922 11.8245 10.046 12 10.046C12.1755 10.046 12.348 10.0922 12.5 10.18C12.5239 10.9756 12.8628 11.7292 13.4423 12.275C14.0218 12.8207 14.7943 13.1139 15.59 13.09C16.3856 13.0661 17.1392 12.7272 17.685 12.1477C18.2307 11.5682 18.5239 10.7956 18.5 10H19.74C19.9082 10.6535 19.9956 11.3252 20 12C20 14.1217 19.1571 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20V20ZM14.36 14.23C13.6915 14.769 12.8587 15.0629 12 15.0629C11.1413 15.0629 10.3085 14.769 9.64 14.23C9.43578 14.0603 9.1725 13.9786 8.90807 14.003C8.64365 14.0274 8.39974 14.1558 8.23 14.36C8.06026 14.5642 7.9786 14.8275 8.00298 15.0919C8.02736 15.3564 8.15578 15.6003 8.36 15.77C9.38133 16.6226 10.6696 17.0896 12 17.0896C13.3304 17.0896 14.6187 16.6226 15.64 15.77C15.8442 15.6003 15.9726 15.3564 15.997 15.0919C16.0214 14.8275 15.9397 14.5642 15.77 14.36C15.686 14.2589 15.5828 14.1753 15.4665 14.1141C15.3501 14.0528 15.2229 14.0151 15.0919 14.003C14.8275 13.9786 14.5642 14.0603 14.36 14.23V14.23Z\"\n                      fill=\"white\"\n                    />\n                  </svg>\n\n                  <span className=\"font-semibold ml-4\">Wallet Connected</span>\n                </div>\n              ) : (\n                <Button\n                  disabled={\n                    loadingEstimate ||\n                    loadingClaim ||\n                    !wallet.isConnected ||\n                    !totalPhunky\n                  }\n                  className=\"mr-4\"\n                  onClick={claimPhunkies}\n                >\n                  {loadingClaim ? \" ... \" : \"Claim $PHUNKY\"}\n                </Button>\n              )}\n              <Button disabled className=\"ml-4\">\n                Add $PHUNKY\n              </Button>\n            </div>\n          </article>\n        </div>\n      </section>\n      <section className=\"flex flex-col items-center mt-48\" id=\"distribution\">\n        <h2>Distribution</h2>\n        <article className=\"flex flex-col items-center mt-12\">\n          <p className=\"max-w-xl w-full text-center\">\n            All Phunks earn $PHUNKY forever. Distribution rate halves every year\n            and aims to be closer to 21 Million $PHUNKY in long term, taking a\n            close stand to Bitcoin and the first decentralized ecosystem.\n          </p>\n          <p className=\"mt-8 max-w-xl w-full text-center\">\n            We expect Phunks to stand for decentralization & individual freedom.\n            As centralization forces try to take a bigger chunk from the web3\n            world, Phunks will support endeavours that make the web3 future\n            free, open and inclusive for all.\n          </p>\n          <p className=\"mt-8 max-w-xl w-full text-center\">\n            There is no pre-mined or distributed $PHUNKY. Whenever any Phunk\n            holder claims $PHUNKY. 90% is distributed to him, 9% is granted to\n            Phunk DAO treasury, and 1% is rewarded to creators of $PHUNKY.\n          </p>\n          <figure className=\"mt-12\">\n            <svg\n              width=\"574\"\n              height=\"597\"\n              className=\"max-w-full\"\n              viewBox=\"0 0 574 597\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle\n                cx=\"261\"\n                cy=\"345\"\n                r=\"250\"\n                stroke=\"url(#paint0_linear_12_7)\"\n                strokeWidth=\"4\"\n              />\n              <path\n                d=\"M339 137.5V43.5H478.5\"\n                stroke=\"#F3F3F3\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeDasharray=\"4 4\"\n              />\n              <path\n                d=\"M261.5 96.5V22H136.5\"\n                stroke=\"#F3F3F3\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeDasharray=\"4 4\"\n              />\n              <path\n                d=\"M497.116 31.206C497.116 32.094 496.978 32.928 496.702 33.708C496.426 34.488 496.066 35.214 495.622 35.886C495.19 36.546 494.698 37.14 494.146 37.668C493.606 38.196 493.066 38.64 492.526 39H488.8C489.58 38.46 490.276 37.944 490.888 37.452C491.512 36.948 492.052 36.45 492.508 35.958C492.976 35.454 493.354 34.938 493.642 34.41C493.942 33.882 494.158 33.312 494.29 32.7L494.128 32.646C494.02 32.886 493.882 33.12 493.714 33.348C493.558 33.576 493.366 33.78 493.138 33.96C492.922 34.128 492.658 34.266 492.346 34.374C492.046 34.482 491.692 34.536 491.284 34.536C490.756 34.536 490.264 34.446 489.808 34.266C489.352 34.074 488.956 33.81 488.62 33.474C488.296 33.126 488.038 32.712 487.846 32.232C487.654 31.752 487.558 31.212 487.558 30.612C487.558 29.976 487.672 29.388 487.9 28.848C488.128 28.308 488.446 27.846 488.854 27.462C489.274 27.066 489.778 26.76 490.366 26.544C490.954 26.328 491.608 26.22 492.328 26.22C493.084 26.22 493.756 26.34 494.344 26.58C494.944 26.808 495.448 27.144 495.856 27.588C496.264 28.02 496.576 28.542 496.792 29.154C497.008 29.766 497.116 30.45 497.116 31.206ZM492.346 32.466C492.958 32.466 493.438 32.304 493.786 31.98C494.134 31.644 494.308 31.164 494.308 30.54V30.288C494.308 29.664 494.14 29.184 493.804 28.848C493.48 28.5 492.994 28.326 492.346 28.326C491.698 28.326 491.206 28.5 490.87 28.848C490.534 29.184 490.366 29.664 490.366 30.288V30.54C490.366 31.164 490.534 31.644 490.87 31.98C491.218 32.304 491.71 32.466 492.346 32.466ZM500.763 32.916C499.863 32.916 499.167 32.622 498.675 32.034C498.183 31.434 497.937 30.612 497.937 29.568C497.937 28.524 498.183 27.708 498.675 27.12C499.167 26.52 499.863 26.22 500.763 26.22C501.663 26.22 502.359 26.52 502.851 27.12C503.343 27.708 503.589 28.524 503.589 29.568C503.589 30.612 503.343 31.434 502.851 32.034C502.359 32.622 501.663 32.916 500.763 32.916ZM500.763 31.35C501.111 31.35 501.351 31.224 501.483 30.972C501.627 30.72 501.699 30.384 501.699 29.964V29.172C501.699 28.752 501.627 28.416 501.483 28.164C501.351 27.912 501.111 27.786 500.763 27.786C500.415 27.786 500.169 27.912 500.025 28.164C499.893 28.416 499.827 28.752 499.827 29.172V29.964C499.827 30.384 499.893 30.72 500.025 30.972C500.169 31.224 500.415 31.35 500.763 31.35ZM506.523 26.436H508.557L505.839 31.836H503.805L506.523 26.436ZM500.547 33.6H502.581L499.863 39H497.829L500.547 33.6ZM505.641 39.216C504.741 39.216 504.045 38.922 503.553 38.334C503.061 37.734 502.815 36.912 502.815 35.868C502.815 34.824 503.061 34.008 503.553 33.42C504.045 32.82 504.741 32.52 505.641 32.52C506.541 32.52 507.237 32.82 507.729 33.42C508.221 34.008 508.467 34.824 508.467 35.868C508.467 36.912 508.221 37.734 507.729 38.334C507.237 38.922 506.541 39.216 505.641 39.216ZM505.641 37.65C505.989 37.65 506.229 37.524 506.361 37.272C506.505 37.02 506.577 36.684 506.577 36.264V35.472C506.577 35.052 506.505 34.716 506.361 34.464C506.229 34.212 505.989 34.086 505.641 34.086C505.293 34.086 505.047 34.212 504.903 34.464C504.771 34.716 504.705 35.052 504.705 35.472V36.264C504.705 36.684 504.771 37.02 504.903 37.272C505.047 37.524 505.293 37.65 505.641 37.65ZM493.156 50.75V62H491.644V50.75H487.45V49.436H497.35V50.75H493.156ZM499.179 60.776H501.897V53.936H499.179V52.712H503.337V55.052H503.427C503.619 54.32 503.979 53.75 504.507 53.342C505.047 52.922 505.731 52.712 506.559 52.712H507.855V54.152H506.109C505.281 54.152 504.609 54.392 504.093 54.872C503.589 55.352 503.337 55.982 503.337 56.762V60.776H506.937V62H499.179V60.776ZM514.148 62.216C513.476 62.216 512.87 62.102 512.33 61.874C511.802 61.646 511.346 61.322 510.962 60.902C510.59 60.47 510.302 59.96 510.098 59.372C509.894 58.772 509.792 58.106 509.792 57.374C509.792 56.63 509.894 55.958 510.098 55.358C510.314 54.758 510.608 54.248 510.98 53.828C511.352 53.396 511.796 53.066 512.312 52.838C512.84 52.61 513.422 52.496 514.058 52.496C514.682 52.496 515.246 52.61 515.75 52.838C516.266 53.066 516.704 53.384 517.064 53.792C517.424 54.188 517.7 54.662 517.892 55.214C518.084 55.766 518.18 56.372 518.18 57.032V57.716H511.304V58.148C511.304 58.556 511.37 58.934 511.502 59.282C511.634 59.63 511.82 59.93 512.06 60.182C512.312 60.434 512.612 60.632 512.96 60.776C513.32 60.908 513.716 60.974 514.148 60.974C514.772 60.974 515.312 60.83 515.768 60.542C516.224 60.254 516.572 59.858 516.812 59.354L517.874 60.074C517.598 60.698 517.136 61.214 516.488 61.622C515.852 62.018 515.072 62.216 514.148 62.216ZM514.058 53.684C513.662 53.684 513.296 53.756 512.96 53.9C512.624 54.044 512.33 54.242 512.078 54.494C511.838 54.746 511.646 55.046 511.502 55.394C511.37 55.73 511.304 56.102 511.304 56.51V56.636H516.632V56.438C516.632 56.03 516.566 55.658 516.434 55.322C516.314 54.986 516.14 54.698 515.912 54.458C515.696 54.206 515.426 54.014 515.102 53.882C514.79 53.75 514.442 53.684 514.058 53.684ZM528.289 62C527.725 62 527.323 61.856 527.083 61.568C526.843 61.28 526.693 60.92 526.633 60.488H526.543C526.339 61.028 526.009 61.454 525.553 61.766C525.109 62.066 524.509 62.216 523.753 62.216C522.781 62.216 522.007 61.964 521.431 61.46C520.855 60.956 520.567 60.266 520.567 59.39C520.567 58.526 520.879 57.86 521.503 57.392C522.139 56.924 523.159 56.69 524.563 56.69H526.543V55.772C526.543 55.088 526.351 54.578 525.967 54.242C525.583 53.894 525.037 53.72 524.329 53.72C523.705 53.72 523.195 53.846 522.799 54.098C522.403 54.338 522.085 54.668 521.845 55.088L520.873 54.368C520.993 54.128 521.155 53.894 521.359 53.666C521.563 53.438 521.815 53.24 522.115 53.072C522.415 52.892 522.757 52.754 523.141 52.658C523.525 52.55 523.951 52.496 524.419 52.496C525.511 52.496 526.375 52.772 527.011 53.324C527.659 53.876 527.983 54.644 527.983 55.628V60.74H529.279V62H528.289ZM524.005 61.01C524.377 61.01 524.713 60.968 525.013 60.884C525.325 60.788 525.595 60.668 525.823 60.524C526.051 60.368 526.225 60.188 526.345 59.984C526.477 59.768 526.543 59.54 526.543 59.3V57.77H524.563C523.699 57.77 523.069 57.89 522.673 58.13C522.277 58.37 522.079 58.718 522.079 59.174V59.552C522.079 60.032 522.247 60.398 522.583 60.65C522.931 60.89 523.405 61.01 524.005 61.01ZM535.68 62.216C534.708 62.216 533.868 62.054 533.16 61.73C532.464 61.394 531.87 60.95 531.378 60.398L532.35 59.552C532.794 60.02 533.28 60.38 533.808 60.632C534.336 60.884 534.972 61.01 535.716 61.01C536.436 61.01 537.024 60.884 537.48 60.632C537.948 60.368 538.182 59.96 538.182 59.408C538.182 59.168 538.134 58.97 538.038 58.814C537.954 58.646 537.834 58.514 537.678 58.418C537.522 58.322 537.348 58.25 537.156 58.202C536.964 58.142 536.76 58.094 536.544 58.058L535.086 57.842C534.762 57.794 534.408 57.728 534.024 57.644C533.652 57.56 533.31 57.428 532.998 57.248C532.686 57.056 532.422 56.804 532.206 56.492C532.002 56.18 531.9 55.772 531.9 55.268C531.9 54.8 531.99 54.398 532.17 54.062C532.362 53.714 532.626 53.426 532.962 53.198C533.298 52.958 533.694 52.784 534.15 52.676C534.606 52.556 535.104 52.496 535.644 52.496C536.484 52.496 537.21 52.628 537.822 52.892C538.446 53.156 538.98 53.522 539.424 53.99L538.488 54.872C538.38 54.74 538.242 54.608 538.074 54.476C537.918 54.332 537.72 54.206 537.48 54.098C537.252 53.978 536.982 53.882 536.67 53.81C536.358 53.738 535.998 53.702 535.59 53.702C534.858 53.702 534.294 53.828 533.898 54.08C533.514 54.332 533.322 54.698 533.322 55.178C533.322 55.418 533.364 55.622 533.448 55.79C533.544 55.946 533.67 56.072 533.826 56.168C533.982 56.264 534.156 56.342 534.348 56.402C534.552 56.45 534.756 56.492 534.96 56.528L536.418 56.744C536.754 56.792 537.108 56.858 537.48 56.942C537.852 57.026 538.194 57.164 538.506 57.356C538.818 57.536 539.076 57.782 539.28 58.094C539.496 58.406 539.604 58.814 539.604 59.318C539.604 60.242 539.244 60.956 538.524 61.46C537.816 61.964 536.868 62.216 535.68 62.216ZM548.561 60.488H548.489C548.393 60.716 548.273 60.938 548.129 61.154C547.985 61.358 547.805 61.538 547.589 61.694C547.385 61.85 547.139 61.976 546.851 62.072C546.563 62.168 546.227 62.216 545.843 62.216C544.871 62.216 544.091 61.91 543.503 61.298C542.915 60.674 542.621 59.798 542.621 58.67V52.712H544.061V58.418C544.061 59.27 544.247 59.906 544.619 60.326C544.991 60.734 545.537 60.938 546.257 60.938C546.545 60.938 546.827 60.902 547.103 60.83C547.379 60.758 547.625 60.65 547.841 60.506C548.057 60.362 548.231 60.182 548.363 59.966C548.495 59.738 548.561 59.468 548.561 59.156V52.712H550.001V62H548.561V60.488ZM553.144 60.776H555.862V53.936H553.144V52.712H557.302V55.052H557.392C557.584 54.32 557.944 53.75 558.472 53.342C559.012 52.922 559.696 52.712 560.524 52.712H561.82V54.152H560.074C559.246 54.152 558.574 54.392 558.058 54.872C557.554 55.352 557.302 55.982 557.302 56.762V60.776H560.902V62H553.144V60.776ZM570.957 52.712H572.397L567.789 64.034C567.681 64.298 567.561 64.526 567.429 64.718C567.297 64.922 567.141 65.084 566.961 65.204C566.781 65.336 566.565 65.432 566.313 65.492C566.061 65.564 565.761 65.6 565.413 65.6H564.045V64.376H566.205L567.249 61.82L563.505 52.712H564.981L566.547 56.6L567.933 60.128H568.005L569.391 56.6L570.957 52.712Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M41.692 18V15.822H45.076V7.398H44.914L42.358 10.746L40.63 9.396L43.636 5.436H47.776V15.822H50.44V18H41.692ZM53.763 11.916C52.863 11.916 52.167 11.622 51.675 11.034C51.183 10.434 50.937 9.612 50.937 8.568C50.937 7.524 51.183 6.708 51.675 6.12C52.167 5.52 52.863 5.22 53.763 5.22C54.663 5.22 55.359 5.52 55.851 6.12C56.343 6.708 56.589 7.524 56.589 8.568C56.589 9.612 56.343 10.434 55.851 11.034C55.359 11.622 54.663 11.916 53.763 11.916ZM53.763 10.35C54.111 10.35 54.351 10.224 54.483 9.972C54.627 9.72 54.699 9.384 54.699 8.964V8.172C54.699 7.752 54.627 7.416 54.483 7.164C54.351 6.912 54.111 6.786 53.763 6.786C53.415 6.786 53.169 6.912 53.025 7.164C52.893 7.416 52.827 7.752 52.827 8.172V8.964C52.827 9.384 52.893 9.72 53.025 9.972C53.169 10.224 53.415 10.35 53.763 10.35ZM59.523 5.436H61.557L58.839 10.836H56.805L59.523 5.436ZM53.547 12.6H55.581L52.863 18H50.829L53.547 12.6ZM58.641 18.216C57.741 18.216 57.045 17.922 56.553 17.334C56.061 16.734 55.815 15.912 55.815 14.868C55.815 13.824 56.061 13.008 56.553 12.42C57.045 11.82 57.741 11.52 58.641 11.52C59.541 11.52 60.237 11.82 60.729 12.42C61.221 13.008 61.467 13.824 61.467 14.868C61.467 15.912 61.221 16.734 60.729 17.334C60.237 17.922 59.541 18.216 58.641 18.216ZM58.641 16.65C58.989 16.65 59.229 16.524 59.361 16.272C59.505 16.02 59.577 15.684 59.577 15.264V14.472C59.577 14.052 59.505 13.716 59.361 13.464C59.229 13.212 58.989 13.086 58.641 13.086C58.293 13.086 58.047 13.212 57.903 13.464C57.771 13.716 57.705 14.052 57.705 14.472V15.264C57.705 15.684 57.771 16.02 57.903 16.272C58.047 16.524 58.293 16.65 58.641 16.65ZM45.814 41.216C44.278 41.216 43.132 40.658 42.376 39.542C41.632 38.426 41.26 36.818 41.26 34.718C41.26 32.618 41.632 31.01 42.376 29.894C43.132 28.778 44.278 28.22 45.814 28.22C46.39 28.22 46.888 28.298 47.308 28.454C47.728 28.61 48.088 28.82 48.388 29.084C48.688 29.348 48.94 29.648 49.144 29.984C49.348 30.308 49.528 30.638 49.684 30.974L48.388 31.568C48.28 31.292 48.154 31.034 48.01 30.794C47.866 30.542 47.692 30.326 47.488 30.146C47.296 29.954 47.062 29.804 46.786 29.696C46.522 29.588 46.198 29.534 45.814 29.534C44.818 29.534 44.074 29.912 43.582 30.668C43.102 31.424 42.862 32.432 42.862 33.692V35.744C42.862 37.004 43.102 38.012 43.582 38.768C44.074 39.524 44.818 39.902 45.814 39.902C46.198 39.902 46.522 39.848 46.786 39.74C47.062 39.632 47.296 39.488 47.488 39.308C47.692 39.116 47.866 38.9 48.01 38.66C48.154 38.408 48.28 38.144 48.388 37.868L49.684 38.462C49.528 38.81 49.348 39.146 49.144 39.47C48.94 39.794 48.688 40.088 48.388 40.352C48.088 40.616 47.728 40.826 47.308 40.982C46.888 41.138 46.39 41.216 45.814 41.216ZM52.179 39.776H54.897V32.936H52.179V31.712H56.337V34.052H56.427C56.619 33.32 56.979 32.75 57.507 32.342C58.047 31.922 58.731 31.712 59.559 31.712H60.855V33.152H59.109C58.281 33.152 57.609 33.392 57.093 33.872C56.589 34.352 56.337 34.982 56.337 35.762V39.776H59.937V41H52.179V39.776ZM67.1479 41.216C66.4759 41.216 65.8699 41.102 65.3299 40.874C64.8019 40.646 64.3459 40.322 63.9619 39.902C63.5899 39.47 63.3019 38.96 63.0979 38.372C62.8939 37.772 62.7919 37.106 62.7919 36.374C62.7919 35.63 62.8939 34.958 63.0979 34.358C63.3139 33.758 63.6079 33.248 63.9799 32.828C64.3519 32.396 64.7959 32.066 65.3119 31.838C65.8399 31.61 66.4219 31.496 67.0579 31.496C67.6819 31.496 68.2459 31.61 68.7499 31.838C69.2659 32.066 69.7039 32.384 70.0639 32.792C70.4239 33.188 70.6999 33.662 70.8919 34.214C71.0839 34.766 71.1799 35.372 71.1799 36.032V36.716H64.3039V37.148C64.3039 37.556 64.3699 37.934 64.5019 38.282C64.6339 38.63 64.8199 38.93 65.0599 39.182C65.3119 39.434 65.6119 39.632 65.9599 39.776C66.3199 39.908 66.7159 39.974 67.1479 39.974C67.7719 39.974 68.3119 39.83 68.7679 39.542C69.2239 39.254 69.5719 38.858 69.8119 38.354L70.8739 39.074C70.5979 39.698 70.1359 40.214 69.4879 40.622C68.8519 41.018 68.0719 41.216 67.1479 41.216ZM67.0579 32.684C66.6619 32.684 66.2959 32.756 65.9599 32.9C65.6239 33.044 65.3299 33.242 65.0779 33.494C64.8379 33.746 64.6459 34.046 64.5019 34.394C64.3699 34.73 64.3039 35.102 64.3039 35.51V35.636H69.6319V35.438C69.6319 35.03 69.5659 34.658 69.4339 34.322C69.3139 33.986 69.1399 33.698 68.9119 33.458C68.6959 33.206 68.4259 33.014 68.1019 32.882C67.7899 32.75 67.4419 32.684 67.0579 32.684ZM81.2889 41C80.7249 41 80.3229 40.856 80.0829 40.568C79.8429 40.28 79.6929 39.92 79.6329 39.488H79.5429C79.3389 40.028 79.0089 40.454 78.5529 40.766C78.1089 41.066 77.5089 41.216 76.7529 41.216C75.7809 41.216 75.0069 40.964 74.4309 40.46C73.8549 39.956 73.5669 39.266 73.5669 38.39C73.5669 37.526 73.8789 36.86 74.5029 36.392C75.1389 35.924 76.1589 35.69 77.5629 35.69H79.5429V34.772C79.5429 34.088 79.3509 33.578 78.9669 33.242C78.5829 32.894 78.0369 32.72 77.3289 32.72C76.7049 32.72 76.1949 32.846 75.7989 33.098C75.4029 33.338 75.0849 33.668 74.8449 34.088L73.8729 33.368C73.9929 33.128 74.1549 32.894 74.3589 32.666C74.5629 32.438 74.8149 32.24 75.1149 32.072C75.4149 31.892 75.7569 31.754 76.1409 31.658C76.5249 31.55 76.9509 31.496 77.4189 31.496C78.5109 31.496 79.3749 31.772 80.0109 32.324C80.6589 32.876 80.9829 33.644 80.9829 34.628V39.74H82.2789V41H81.2889ZM77.0049 40.01C77.3769 40.01 77.7129 39.968 78.0129 39.884C78.3249 39.788 78.5949 39.668 78.8229 39.524C79.0509 39.368 79.2249 39.188 79.3449 38.984C79.4769 38.768 79.5429 38.54 79.5429 38.3V36.77H77.5629C76.6989 36.77 76.0689 36.89 75.6729 37.13C75.2769 37.37 75.0789 37.718 75.0789 38.174V38.552C75.0789 39.032 75.2469 39.398 75.5829 39.65C75.9309 39.89 76.4049 40.01 77.0049 40.01ZM89.0219 41C88.3139 41 87.7919 40.802 87.4559 40.406C87.1319 40.01 86.9699 39.5 86.9699 38.876V32.936H83.8739V31.712H86.1779C86.4899 31.712 86.7059 31.652 86.8259 31.532C86.9579 31.4 87.0239 31.178 87.0239 30.866V28.436H88.4099V31.712H92.6399V32.936H88.4099V39.776H92.6399V41H89.0219ZM99.3648 41.216C98.7168 41.216 98.1288 41.102 97.6008 40.874C97.0848 40.646 96.6408 40.322 96.2688 39.902C95.9088 39.47 95.6328 38.96 95.4408 38.372C95.2488 37.772 95.1528 37.1 95.1528 36.356C95.1528 35.624 95.2488 34.958 95.4408 34.358C95.6328 33.758 95.9088 33.248 96.2688 32.828C96.6408 32.396 97.0848 32.066 97.6008 31.838C98.1288 31.61 98.7168 31.496 99.3648 31.496C100.013 31.496 100.595 31.61 101.111 31.838C101.639 32.066 102.083 32.396 102.443 32.828C102.815 33.248 103.097 33.758 103.289 34.358C103.481 34.958 103.577 35.624 103.577 36.356C103.577 37.1 103.481 37.772 103.289 38.372C103.097 38.96 102.815 39.47 102.443 39.902C102.083 40.322 101.639 40.646 101.111 40.874C100.595 41.102 100.013 41.216 99.3648 41.216ZM99.3648 39.974C100.169 39.974 100.817 39.734 101.309 39.254C101.801 38.774 102.047 38.03 102.047 37.022V35.69C102.047 34.682 101.801 33.938 101.309 33.458C100.817 32.978 100.169 32.738 99.3648 32.738C98.5608 32.738 97.9128 32.978 97.4208 33.458C96.9288 33.938 96.6828 34.682 96.6828 35.69V37.022C96.6828 38.03 96.9288 38.774 97.4208 39.254C97.9128 39.734 98.5608 39.974 99.3648 39.974ZM106.144 39.776H108.862V32.936H106.144V31.712H110.302V34.052H110.392C110.584 33.32 110.944 32.75 111.472 32.342C112.012 31.922 112.696 31.712 113.524 31.712H114.82V33.152H113.074C112.246 33.152 111.574 33.392 111.058 33.872C110.554 34.352 110.302 34.982 110.302 35.762V39.776H113.902V41H106.144V39.776ZM121.059 41.216C120.087 41.216 119.247 41.054 118.539 40.73C117.843 40.394 117.249 39.95 116.757 39.398L117.729 38.552C118.173 39.02 118.659 39.38 119.187 39.632C119.715 39.884 120.351 40.01 121.095 40.01C121.815 40.01 122.403 39.884 122.859 39.632C123.327 39.368 123.561 38.96 123.561 38.408C123.561 38.168 123.513 37.97 123.417 37.814C123.333 37.646 123.213 37.514 123.057 37.418C122.901 37.322 122.727 37.25 122.535 37.202C122.343 37.142 122.139 37.094 121.923 37.058L120.465 36.842C120.141 36.794 119.787 36.728 119.403 36.644C119.031 36.56 118.689 36.428 118.377 36.248C118.065 36.056 117.801 35.804 117.585 35.492C117.381 35.18 117.279 34.772 117.279 34.268C117.279 33.8 117.369 33.398 117.549 33.062C117.741 32.714 118.005 32.426 118.341 32.198C118.677 31.958 119.073 31.784 119.529 31.676C119.985 31.556 120.483 31.496 121.023 31.496C121.863 31.496 122.589 31.628 123.201 31.892C123.825 32.156 124.359 32.522 124.803 32.99L123.867 33.872C123.759 33.74 123.621 33.608 123.453 33.476C123.297 33.332 123.099 33.206 122.859 33.098C122.631 32.978 122.361 32.882 122.049 32.81C121.737 32.738 121.377 32.702 120.969 32.702C120.237 32.702 119.673 32.828 119.277 33.08C118.893 33.332 118.701 33.698 118.701 34.178C118.701 34.418 118.743 34.622 118.827 34.79C118.923 34.946 119.049 35.072 119.205 35.168C119.361 35.264 119.535 35.342 119.727 35.402C119.931 35.45 120.135 35.492 120.339 35.528L121.797 35.744C122.133 35.792 122.487 35.858 122.859 35.942C123.231 36.026 123.573 36.164 123.885 36.356C124.197 36.536 124.455 36.782 124.659 37.094C124.875 37.406 124.983 37.814 124.983 38.318C124.983 39.242 124.623 39.956 123.903 40.46C123.195 40.964 122.247 41.216 121.059 41.216Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M253 336.982L253 87C258.236 87 263.471 87.1645 268.696 87.4933L253 336.982Z\"\n                fill=\"#3F355C\"\n                stroke=\"#1F1F1F\"\n                strokeWidth=\"6\"\n              />\n              <path\n                d=\"M253 336.982L268.696 87.493C316.04 90.4716 361.559 106.859 399.936 134.742L253 336.982Z\"\n                fill=\"#E78FAD\"\n                stroke=\"#1F1F1F\"\n                strokeWidth=\"6\"\n              />\n              <path\n                d=\"M253 336.982L399.936 134.742C511.63 215.893 536.39 372.224 455.24 483.918C374.089 595.612 217.758 620.373 106.064 539.222C-5.6299 458.072 -30.3904 301.74 50.7601 190.046C97.795 125.308 172.979 87 253 87V336.982Z\"\n                fill=\"url(#paint1_linear_12_7)\"\n              />\n              <path\n                d=\"M253 336.982H250V346.215L255.427 338.746L253 336.982ZM399.936 134.742L401.699 132.315L399.272 130.552L397.509 132.979L399.936 134.742ZM50.7601 190.046L53.1871 191.81L50.7601 190.046ZM253 87H256V84H253V87ZM255.427 338.746L402.363 136.506L397.509 132.979L250.573 335.219L255.427 338.746ZM398.173 137.169C508.526 217.346 532.989 371.801 452.813 482.155L457.667 485.681C539.791 372.647 514.734 214.44 401.699 132.315L398.173 137.169ZM452.813 482.155C372.636 592.508 218.181 616.972 107.827 536.795L104.301 541.649C217.335 623.774 375.543 598.716 457.667 485.681L452.813 482.155ZM107.827 536.795C-2.52612 456.619 -26.9894 302.163 53.1871 191.81L48.333 188.283C-33.7913 301.317 -8.73368 459.525 104.301 541.649L107.827 536.795ZM53.1871 191.81C99.6576 127.849 173.94 90 253 90V84C172.019 84 95.9324 122.768 48.333 188.283L53.1871 191.81ZM250 87V336.982H256V87H250Z\"\n                fill=\"#1F1F1F\"\n              />\n              <path\n                d=\"M245.927 423.206C245.927 424.094 245.789 424.928 245.513 425.708C245.237 426.488 244.877 427.214 244.433 427.886C244.001 428.546 243.509 429.14 242.957 429.668C242.417 430.196 241.877 430.64 241.337 431H237.611C238.391 430.46 239.087 429.944 239.699 429.452C240.323 428.948 240.863 428.45 241.319 427.958C241.787 427.454 242.165 426.938 242.453 426.41C242.753 425.882 242.969 425.312 243.101 424.7L242.939 424.646C242.831 424.886 242.693 425.12 242.525 425.348C242.369 425.576 242.177 425.78 241.949 425.96C241.733 426.128 241.469 426.266 241.157 426.374C240.857 426.482 240.503 426.536 240.095 426.536C239.567 426.536 239.075 426.446 238.619 426.266C238.163 426.074 237.767 425.81 237.431 425.474C237.107 425.126 236.849 424.712 236.657 424.232C236.465 423.752 236.369 423.212 236.369 422.612C236.369 421.976 236.483 421.388 236.711 420.848C236.939 420.308 237.257 419.846 237.665 419.462C238.085 419.066 238.589 418.76 239.177 418.544C239.765 418.328 240.419 418.22 241.139 418.22C241.895 418.22 242.567 418.34 243.155 418.58C243.755 418.808 244.259 419.144 244.667 419.588C245.075 420.02 245.387 420.542 245.603 421.154C245.819 421.766 245.927 422.45 245.927 423.206ZM241.157 424.466C241.769 424.466 242.249 424.304 242.597 423.98C242.945 423.644 243.119 423.164 243.119 422.54V422.288C243.119 421.664 242.951 421.184 242.615 420.848C242.291 420.5 241.805 420.326 241.157 420.326C240.509 420.326 240.017 420.5 239.681 420.848C239.345 421.184 239.177 421.664 239.177 422.288V422.54C239.177 423.164 239.345 423.644 239.681 423.98C240.029 424.304 240.521 424.466 241.157 424.466ZM252.004 431.216C250.324 431.216 249.082 430.646 248.278 429.506C247.486 428.366 247.09 426.77 247.09 424.718C247.09 422.666 247.486 421.07 248.278 419.93C249.082 418.79 250.324 418.22 252.004 418.22C253.684 418.22 254.92 418.79 255.712 419.93C256.516 421.07 256.918 422.666 256.918 424.718C256.918 426.77 256.516 428.366 255.712 429.506C254.92 430.646 253.684 431.216 252.004 431.216ZM252.004 429.092C252.808 429.092 253.366 428.81 253.678 428.246C254.002 427.682 254.164 426.896 254.164 425.888V423.548C254.164 422.54 254.002 421.754 253.678 421.19C253.366 420.626 252.808 420.344 252.004 420.344C251.2 420.344 250.636 420.626 250.312 421.19C250 421.754 249.844 422.54 249.844 423.548V425.888C249.844 426.896 250 427.682 250.312 428.246C250.636 428.81 251.2 429.092 252.004 429.092ZM252.004 425.78C251.584 425.78 251.29 425.696 251.122 425.528C250.966 425.36 250.888 425.156 250.888 424.916V424.52C250.888 424.28 250.966 424.076 251.122 423.908C251.29 423.74 251.584 423.656 252.004 423.656C252.424 423.656 252.712 423.74 252.868 423.908C253.036 424.076 253.12 424.28 253.12 424.52V424.916C253.12 425.156 253.036 425.36 252.868 425.528C252.712 425.696 252.424 425.78 252.004 425.78ZM260.366 424.916C259.466 424.916 258.77 424.622 258.278 424.034C257.786 423.434 257.54 422.612 257.54 421.568C257.54 420.524 257.786 419.708 258.278 419.12C258.77 418.52 259.466 418.22 260.366 418.22C261.266 418.22 261.962 418.52 262.454 419.12C262.946 419.708 263.192 420.524 263.192 421.568C263.192 422.612 262.946 423.434 262.454 424.034C261.962 424.622 261.266 424.916 260.366 424.916ZM260.366 423.35C260.714 423.35 260.954 423.224 261.086 422.972C261.23 422.72 261.302 422.384 261.302 421.964V421.172C261.302 420.752 261.23 420.416 261.086 420.164C260.954 419.912 260.714 419.786 260.366 419.786C260.018 419.786 259.772 419.912 259.628 420.164C259.496 420.416 259.43 420.752 259.43 421.172V421.964C259.43 422.384 259.496 422.72 259.628 422.972C259.772 423.224 260.018 423.35 260.366 423.35ZM266.126 418.436H268.16L265.442 423.836H263.408L266.126 418.436ZM260.15 425.6H262.184L259.466 431H257.432L260.15 425.6ZM265.244 431.216C264.344 431.216 263.648 430.922 263.156 430.334C262.664 429.734 262.418 428.912 262.418 427.868C262.418 426.824 262.664 426.008 263.156 425.42C263.648 424.82 264.344 424.52 265.244 424.52C266.144 424.52 266.84 424.82 267.332 425.42C267.824 426.008 268.07 426.824 268.07 427.868C268.07 428.912 267.824 429.734 267.332 430.334C266.84 430.922 266.144 431.216 265.244 431.216ZM265.244 429.65C265.592 429.65 265.832 429.524 265.964 429.272C266.108 429.02 266.18 428.684 266.18 428.264V427.472C266.18 427.052 266.108 426.716 265.964 426.464C265.832 426.212 265.592 426.086 265.244 426.086C264.896 426.086 264.65 426.212 264.506 426.464C264.374 426.716 264.308 427.052 264.308 427.472V428.264C264.308 428.684 264.374 429.02 264.506 429.272C264.65 429.524 264.896 429.65 265.244 429.65ZM181.471 454.198C180.475 454.138 179.647 453.91 178.987 453.514C178.327 453.106 177.781 452.602 177.349 452.002L178.447 451.102C178.879 451.642 179.335 452.062 179.815 452.362C180.295 452.662 180.853 452.842 181.489 452.902V448.204L181.075 448.132C180.451 448.024 179.929 447.862 179.509 447.646C179.089 447.418 178.753 447.154 178.501 446.854C178.249 446.542 178.069 446.2 177.961 445.828C177.853 445.444 177.799 445.048 177.799 444.64C177.799 443.62 178.123 442.822 178.771 442.246C179.431 441.658 180.331 441.322 181.471 441.238V439.402H182.587V441.238C183.415 441.298 184.129 441.502 184.729 441.85C185.341 442.186 185.875 442.66 186.331 443.272L185.197 444.082C184.873 443.65 184.501 443.302 184.081 443.038C183.673 442.774 183.169 442.612 182.569 442.552V446.962L183.109 447.052C183.721 447.16 184.237 447.322 184.657 447.538C185.077 447.754 185.413 448.018 185.665 448.33C185.929 448.63 186.115 448.972 186.223 449.356C186.331 449.74 186.385 450.142 186.385 450.562C186.385 451.618 186.055 452.464 185.395 453.1C184.747 453.736 183.811 454.102 182.587 454.198V456.034H181.471V454.198ZM179.257 444.64C179.257 445.228 179.425 445.69 179.761 446.026C180.109 446.362 180.685 446.614 181.489 446.782V442.534C180.769 442.606 180.217 442.822 179.833 443.182C179.449 443.53 179.257 444.016 179.257 444.64ZM184.927 450.58C184.927 449.932 184.741 449.44 184.369 449.104C184.009 448.768 183.409 448.528 182.569 448.384V452.884C183.325 452.8 183.907 452.56 184.315 452.164C184.723 451.768 184.927 451.24 184.927 450.58ZM188.862 454V441.436H193.434C194.598 441.436 195.486 441.754 196.098 442.39C196.71 443.026 197.016 443.914 197.016 445.054C197.016 446.194 196.71 447.082 196.098 447.718C195.486 448.354 194.598 448.672 193.434 448.672H190.374V454H188.862ZM190.374 447.358H193.398C194.034 447.358 194.526 447.202 194.874 446.89C195.234 446.566 195.414 446.11 195.414 445.522V444.586C195.414 443.998 195.234 443.548 194.874 443.236C194.526 442.912 194.034 442.75 193.398 442.75H190.374V447.358ZM205.883 448.294H200.987V454H199.475V441.436H200.987V446.98H205.883V441.436H207.395V454H205.883V448.294ZM211.78 441.436V448.978C211.78 449.59 211.798 450.136 211.834 450.616C211.87 451.096 211.966 451.51 212.122 451.858C212.278 452.194 212.518 452.452 212.842 452.632C213.178 452.812 213.64 452.902 214.228 452.902C214.816 452.902 215.272 452.812 215.596 452.632C215.932 452.452 216.178 452.194 216.334 451.858C216.49 451.51 216.586 451.096 216.622 450.616C216.658 450.136 216.676 449.59 216.676 448.978V441.436H218.188V448.618C218.188 449.554 218.14 450.37 218.044 451.066C217.96 451.762 217.774 452.344 217.486 452.812C217.21 453.28 216.808 453.634 216.28 453.874C215.764 454.102 215.08 454.216 214.228 454.216C213.376 454.216 212.686 454.102 212.158 453.874C211.642 453.634 211.24 453.28 210.952 452.812C210.676 452.344 210.49 451.762 210.394 451.066C210.31 450.37 210.268 449.554 210.268 448.618V441.436H211.78ZM222.555 443.362H222.429V454H221.061V441.436H223.203L227.487 451.966H227.613V441.436H228.981V454H226.839L222.555 443.362ZM235.256 447.844L233.456 449.968V454H231.944V441.436H233.456V447.988H233.51L235.166 445.9L238.874 441.436H240.692L236.282 446.728L240.818 454H239.054L235.256 447.844ZM245.851 454V449.068L241.513 441.436H243.241L245.041 444.712L246.571 447.574H246.643L248.209 444.712L250.009 441.436H251.701L247.363 449.068V454H245.851ZM264.557 440.68H265.997V446.224H266.069C266.165 445.996 266.285 445.78 266.429 445.576C266.573 445.36 266.747 445.174 266.951 445.018C267.167 444.862 267.419 444.736 267.707 444.64C267.995 444.544 268.331 444.496 268.715 444.496C269.687 444.496 270.467 444.808 271.055 445.432C271.643 446.044 271.937 446.914 271.937 448.042V454H270.497V448.294C270.497 447.442 270.311 446.812 269.939 446.404C269.567 445.984 269.021 445.774 268.301 445.774C268.013 445.774 267.731 445.81 267.455 445.882C267.179 445.954 266.933 446.062 266.717 446.206C266.501 446.35 266.327 446.536 266.195 446.764C266.063 446.992 265.997 447.256 265.997 447.556V454H264.557V440.68ZM278.986 454.216C278.338 454.216 277.75 454.102 277.222 453.874C276.706 453.646 276.262 453.322 275.89 452.902C275.53 452.47 275.254 451.96 275.062 451.372C274.87 450.772 274.774 450.1 274.774 449.356C274.774 448.624 274.87 447.958 275.062 447.358C275.254 446.758 275.53 446.248 275.89 445.828C276.262 445.396 276.706 445.066 277.222 444.838C277.75 444.61 278.338 444.496 278.986 444.496C279.634 444.496 280.216 444.61 280.732 444.838C281.26 445.066 281.704 445.396 282.064 445.828C282.436 446.248 282.718 446.758 282.91 447.358C283.102 447.958 283.198 448.624 283.198 449.356C283.198 450.1 283.102 450.772 282.91 451.372C282.718 451.96 282.436 452.47 282.064 452.902C281.704 453.322 281.26 453.646 280.732 453.874C280.216 454.102 279.634 454.216 278.986 454.216ZM278.986 452.974C279.79 452.974 280.438 452.734 280.93 452.254C281.422 451.774 281.668 451.03 281.668 450.022V448.69C281.668 447.682 281.422 446.938 280.93 446.458C280.438 445.978 279.79 445.738 278.986 445.738C278.182 445.738 277.534 445.978 277.042 446.458C276.55 446.938 276.304 447.682 276.304 448.69V450.022C276.304 451.03 276.55 451.774 277.042 452.254C277.534 452.734 278.182 452.974 278.986 452.974ZM285.819 452.776H289.059V441.904H285.819V440.68H290.499V452.776H293.739V454H285.819V452.776ZM302.822 452.488H302.75C302.15 453.64 301.196 454.216 299.888 454.216C298.748 454.216 297.854 453.79 297.206 452.938C296.57 452.086 296.252 450.892 296.252 449.356C296.252 447.82 296.57 446.626 297.206 445.774C297.854 444.922 298.748 444.496 299.888 444.496C301.196 444.496 302.15 445.072 302.75 446.224H302.822V440.68H304.262V454H302.822V452.488ZM300.446 452.938C300.77 452.938 301.076 452.896 301.364 452.812C301.652 452.728 301.904 452.608 302.12 452.452C302.336 452.284 302.504 452.086 302.624 451.858C302.756 451.618 302.822 451.342 302.822 451.03V447.682C302.822 447.37 302.756 447.1 302.624 446.872C302.504 446.632 302.336 446.434 302.12 446.278C301.904 446.11 301.652 445.984 301.364 445.9C301.076 445.816 300.77 445.774 300.446 445.774C299.606 445.774 298.952 446.032 298.484 446.548C298.028 447.052 297.8 447.724 297.8 448.564V450.148C297.8 450.988 298.028 451.666 298.484 452.182C298.952 452.686 299.606 452.938 300.446 452.938ZM311.527 454.216C310.855 454.216 310.249 454.102 309.709 453.874C309.181 453.646 308.725 453.322 308.341 452.902C307.969 452.47 307.681 451.96 307.477 451.372C307.273 450.772 307.171 450.106 307.171 449.374C307.171 448.63 307.273 447.958 307.477 447.358C307.693 446.758 307.987 446.248 308.359 445.828C308.731 445.396 309.175 445.066 309.691 444.838C310.219 444.61 310.801 444.496 311.437 444.496C312.061 444.496 312.625 444.61 313.129 444.838C313.645 445.066 314.083 445.384 314.443 445.792C314.803 446.188 315.079 446.662 315.271 447.214C315.463 447.766 315.559 448.372 315.559 449.032V449.716H308.683V450.148C308.683 450.556 308.749 450.934 308.881 451.282C309.013 451.63 309.199 451.93 309.439 452.182C309.691 452.434 309.991 452.632 310.339 452.776C310.699 452.908 311.095 452.974 311.527 452.974C312.151 452.974 312.691 452.83 313.147 452.542C313.603 452.254 313.951 451.858 314.191 451.354L315.253 452.074C314.977 452.698 314.515 453.214 313.867 453.622C313.231 454.018 312.451 454.216 311.527 454.216ZM311.437 445.684C311.041 445.684 310.675 445.756 310.339 445.9C310.003 446.044 309.709 446.242 309.457 446.494C309.217 446.746 309.025 447.046 308.881 447.394C308.749 447.73 308.683 448.102 308.683 448.51V448.636H314.011V448.438C314.011 448.03 313.945 447.658 313.813 447.322C313.693 446.986 313.519 446.698 313.291 446.458C313.075 446.206 312.805 446.014 312.481 445.882C312.169 445.75 311.821 445.684 311.437 445.684ZM318.144 452.776H320.862V445.936H318.144V444.712H322.302V447.052H322.392C322.584 446.32 322.944 445.75 323.472 445.342C324.012 444.922 324.696 444.712 325.524 444.712H326.82V446.152H325.074C324.246 446.152 323.574 446.392 323.058 446.872C322.554 447.352 322.302 447.982 322.302 448.762V452.776H325.902V454H318.144V452.776Z\"\n                fill=\"white\"\n              />\n              <defs>\n                <linearGradient\n                  id=\"paint0_linear_12_7\"\n                  x1=\"9\"\n                  y1=\"345\"\n                  x2=\"513\"\n                  y2=\"345\"\n                  gradientUnits=\"userSpaceOnUse\"\n                >\n                  <stop stopColor=\"#BC4E9C\" />\n                  <stop offset=\"1\" stopColor=\"#F80759\" />\n                </linearGradient>\n                <linearGradient\n                  id=\"paint1_linear_12_7\"\n                  x1=\"3\"\n                  y1=\"336.991\"\n                  x2=\"503\"\n                  y2=\"336.991\"\n                  gradientUnits=\"userSpaceOnUse\"\n                >\n                  <stop stopColor=\"#BC4E9C\" />\n                  <stop offset=\"1\" stopColor=\"#F80759\" />\n                </linearGradient>\n              </defs>\n            </svg>\n          </figure>\n        </article>\n        <article className=\"flex flex-col items-center mt-12\">\n          <h3>PhunkyDAO</h3>\n          <p className=\"mt-8 max-w-xl w-full text-center\">\n            PhunkDAO is governed by $PHUNKY. DAO will decide on the governance\n            of treasury, but we expect it to be in line with Phunk vision and\n            growth of decentralization.\n          </p>\n        </article>\n        <article className=\"flex flex-col items-center mt-12\">\n          <h3>Why Phunky?</h3>\n          <p className=\"mt-8 max-w-xl w-full text-center\">\n            It&apos;s natural for user convenience or other benefits that newer\n            technologies tend to be centralized. $PHUNKY will empower phunks to\n            take a stand. Whenever there will be centralization in the\n            decentralized world, Phunks will rise.\n          </p>\n        </article>\n      </section>\n    </main>\n  );\n};\n\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\nimport ConnectButton from \"../ConnectButton\";\n\ninterface HeaderProps {}\n\nconst Header: React.FC<HeaderProps> = () => {\n  return (\n    <header className=\"fixed top-4 right-4 flex\">\n      <ConnectButton hideConnected />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Holders from \"./components/pages/Holders\";\nimport Home from \"./components/pages/Home\";\nimport Header from \"./components/ui/Header\";\n\nfunction App() {\n  return (\n    <main className=\"font-mono bg-p-black text-white py-[30vh]\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/holders\" element={<Holders />} />\n          <Route path=\"/\" element={<Home />} />\n        </Routes>\n      </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}